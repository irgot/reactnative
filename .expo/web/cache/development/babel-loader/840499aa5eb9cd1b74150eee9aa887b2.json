{"ast":null,"code":"var _jsxFileName = \"/home/irgot/projetos/WhatsappClone/navigation/index.tsx\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { View } from \"../components/Themed\";\nimport Colors from \"../constants/Colors\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { Octicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport MainTabNavigator from \"./MainTabNavigator\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.light.tint\n      },\n      headerShadowVisible: false,\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: MainTabNavigator,\n    options: {\n      title: 'WhatsAppC',\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            width: 60,\n            justifyContent: 'space-between',\n            backgroundColor: Colors.light.tint,\n            marginRight: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, React.createElement(Octicons, {\n          name: \"search\",\n          size: 22,\n          color: \"white\",\n          style: {\n            backgroundColor: Colors.light.tint\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }\n        }), React.createElement(MaterialCommunityIcons, {\n          name: \"dots-vertical\",\n          size: 22,\n          color: \"white\",\n          style: {\n            backgroundColor: Colors.light.tint\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'modal'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Modal\",\n    component: ModalScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/irgot/projetos/WhatsappClone/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","View","Colors","ModalScreen","NotFoundScreen","LinkingConfiguration","Octicons","MaterialCommunityIcons","MainTabNavigator","Navigation","colorScheme","Stack","RootNavigator","headerStyle","backgroundColor","light","tint","headerShadowVisible","headerTintColor","background","headerTitleAlign","headerTitleStyle","fontWeight","title","headerRight","flexDirection","width","justifyContent","marginRight","presentation"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\n\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\nimport { View } from '../components/Themed';\n\nimport Colors from '../constants/Colors';\n\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\n\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport { Octicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport MainTabNavigator from './MainTabNavigator';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{\n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n\n      },\n      headerShadowVisible: false,\n\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    }}>\n      <Stack.Screen name=\"Root\" component={MainTabNavigator} options={{\n        title: 'WhatsAppC',\n        headerRight: () => (\n          <View style={{\n            flexDirection: 'row', width: 60, justifyContent: 'space-between', backgroundColor: Colors.light.tint,\n            marginRight: 10\n          }}>\n            <Octicons name=\"search\" size={22} color=\"white\" style={{ backgroundColor: Colors.light.tint }} />\n            <MaterialCommunityIcons name=\"dots-vertical\" size={22} color=\"white\" style={{ backgroundColor: Colors.light.tint }} />\n          </View>\n        )\n      }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}